@model ProjectManagr.ViewModels.ProjectSiteVM
@{
    Layout = null;
    var postMethod = "Create";
}



<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            @if (Model.IsEdit)
            {
            <h4>Edit Project Site</h4>
                postMethod = "Edit";
            }
            else
            {
            <h4>Add Project Site</h4>
                postMethod = "Create";
            }
        </div>
        @using (Ajax.BeginForm(postMethod, "ProjectSite", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSuccessfulProjectSiteUpdate" }, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="modal-body" id="ModalBody">
                <div class="form-horizontal">
                    @Html.HiddenFor(model => model.Name)
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.IsActive)
                    @Html.HiddenFor(model => model.CreatedDate)
                    @Html.HiddenFor(model => model.ModifiedDate)
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.ProjectId, Model.Projects, "Select one", 
                           new { @class = "form-control", @onchange = "ProjectDropdownchange()" })
                            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-default btn-md" data-toggle="modal"
                                    data-url="@Url.Action("AddProject", "ProjectSite")" id="btnCreateProject">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                Add
                            </button>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-5" })
                           <div class="col-md-5">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PmName, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.PmName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.PmName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ApplicationName, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.ApplicationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ApplicationName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SubPortfolioId, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.SubPortfolioId, Model.SubPortfolios, "Select one", new { @class = "form-control", @disabled = "disabled" })
                            @Html.HiddenFor(x => x.SubPortfolioIdRef)
                            @Html.ValidationMessageFor(model => model.SubPortfolioId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EntityStatusId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.EntityStatusId, Model.EntityStatuses, "Select one" , new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EntityStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.CountryId, Model.Countries, "Select one", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SiteId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.SiteId, Model.Sites, "Select one", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SiteId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SiteItmFeedbackId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.SiteItmFeedbackId, Model.SiteItmFeedbacks, "Select one", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SiteItmFeedbackId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.DepartmentId, Model.Departments, "Select one", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ApplicationTypeId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.ApplicationTypeId, Model.ApplicationTypes, "Select one", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ApplicationTypeId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Apex, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Apex, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Apex, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PotentialValue, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.PotentialValue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PotentialValue, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SiteItm, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.SiteItm, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SiteItm, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SiteEngagementStart, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.SiteEngagementStart, new { htmlAttributes = new { @class = "form-control", data_provide = "datepicker" } })
                            @Html.ValidationMessageFor(model => model.SiteEngagementStart, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SiteEngagementEnd, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.SiteEngagementEnd, new { htmlAttributes = new { @class = "form-control", data_provide = "datepicker" } })
                            @Html.ValidationMessageFor(model => model.SiteEngagementEnd, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HasBusinessImpact, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.HasBusinessImpact, true, new { @class = "form-check-input" }) Yes
                        </div>
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.HasBusinessImpact, false, new { @class = "form-check-input" }) No
                            @Html.ValidationMessageFor(model => model.HasBusinessImpact, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CommentsAndIssues, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(model => model.CommentsAndIssues, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CommentsAndIssues, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsResourceRequired, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.IsResourceRequired, true, new { @class = "form-check-input" }) Yes
                        </div>
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.IsResourceRequired, false, new { @class = "form-check-input" }) No
                            @Html.ValidationMessageFor(model => model.IsResourceRequired, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3"></div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Attachment, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Attachment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-primary" value="Save changes" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="createProjectModal" tabindex="-1" role="dialog" aria-labelledby="createProjectModal"
     aria-hidden="true" data-backdrop="static">
    <div id="createProjectContainer">
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


